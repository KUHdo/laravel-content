name: Integration

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    types: [ opened, synchronize, reopened ]

jobs:
  phplint:
    name: "Linting with PHPLint"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phplint
      - name: Check syntax
        run: phplint .

  phpcs:
    name: "Linting with PHP_CodeSniffer"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: phpcs, cs2pr
      - name: Check code style
        run: phpcs -q --report=checkstyle . | cs2pr

  phpunit:
    name: "Testing with PHPUnit"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: '8.1'
          extensions: gd, intl, pcov
          coverage: pcov #optional
          tools: phpunit
          ini-values: pcov.directory=$GITHUB_WORKSPACE
        env:
          COMPOSER_TOKEN: ${{ secrets.GHP_TOKEN }}
      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Setup composer cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Install composer dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Test with phpunit
        run: composer test
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-reports
          path: test-reports
      - name: Publish Test Reports
        if: always()
        uses: EnricoMi/publish-unit-test-result-action@v1
        with:
          files: test-reports/junit.xml
          check_name: "PHPUnit Test Results"

  sonarcloud:
    needs: phpunit
    name: "Analysing with SonarCloud"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Download Test Reports
        uses: actions/download-artifact@v2
        with:
          name: test-reports
          path: test-reports
      - name: fix code coverage paths
        working-directory: ./test-reports
        run: |
          sed -i 's;'$GITHUB_WORKSPACE';/github/workspace/;g' junit.xml
          sed -i 's;'$GITHUB_WORKSPACE';/github/workspace/;g' clover.xml
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
